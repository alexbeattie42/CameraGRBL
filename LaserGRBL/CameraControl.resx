<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAd
        hwAAHYcBj+XxZQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAN1SURBVFhHtVZL
        T1NBFO5OTcCdicadie40MSxgASQEfgCPWGhCgAXwP9xoQlzxUkAU2dAoaAgE2BpIbyEGChpBCEigkJTu
        7L2lhdDxfMOMTK/TdlrgS77c13nNOTPnHo8pGGO34/G47/j4eIiuS8Qj4okg7pfo2yBdm0i2WKhdHolE
        4pHjOMNk2CEyQ5KK85Z0Hwoz+YNWcYsMvSKewqgTd9hKeIX1WD2sfbKd1fnrWPlwOWe9v56/67V6WSgc
        UgNBdrrI1k1h1gyInNL5XTqeXp9mtWO1rGSgxIgIbmZ9huuKQCzKyD1hPjtI8CkpoKZsK7LFmieatU5M
        2DLRwraPtmUQ+7ZtPxFu9MDKpfPgbpDVfKjRGs6HVSNVbH5nXg3irnCXDtSJBEIQXNhZYKVDpVqDhbBs
        qIwFfgdkEN+wv4TbC9AHbDiesuqRaq2hyxCZ2Ixs8iCozM+F23PgqNGHU2yaXDWPxCLM+9Gr/ZaLrZ9b
        5caMpZWCIsI5Z1M/p7SKKoFUKsWmNnLL6ji7McuzQKesnzsne+hwDiIzOWoqCskGegYCINpkohi19+HF
        8v6yVsFNNwrJxmp4VQbR6BG9nXVb3VphNzMhakeZ75NPq+NmX7BPlmEAGcCPhbdSnbCb2XCWOmPjP8a1
        eio7JztlBiwEEMWDaas1Qa5soFWLACIIIImHincVWmE3TZFtb8CXCCBxbQGgHKOhUa2NyveVaQFceQkO
        /xzy46bTB5WjyEvAN2HHZIdW2M1syLZqlWmbUIxRfJjQCbuZCblWrVI5hm+QgSY8YJLRCbvphumqVa4d
        rMkMPEMrLqIbG60Yx0OnoFJFPquWbPA3SOdoxUX8f4ABEi8xRumUVAKFrFpy7tecTP8gdw6ISegEWcAY
        pVOULGTVkm1f2uTvOEk+Hwj356CXXYjsOgcSzJjwQXwp3F6AMouRzIIAxieMUTpDhRC2rF1LOg+QrxvC
        bTowpZDAHgQXdxevbCjFjCmcHxDvC3d6YHQmoX0ooBwYo3SGTYiaK2P5Htl+LNxkRywWu0MKX6GITYMx
        Kp+Nh6MmRy/BQMZxPBNQJ0yvpGxLQ5hk0MXQShEQfmAg7vEO3VRpMmCSbLzIWHMTIHI6s/1k7F8gBrQx
        7fx31C4DWgU6ZiP6N12DxAgRv3IQ90H69pquXsgKtRzweP4CEJEL8lUJgGEAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>157, 17</value>
  </metadata>
</root>